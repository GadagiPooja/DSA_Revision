Indexing:
An array is a collection of elements stored in contiguous memory locations. Each element in an array can be accessed using an index. 
In most programming languages, arrays are zero-indexed, meaning the first element is accessed with index 0.

Traversal:
Traversal refers to the process of accessing each element in the array, typically using a loop to iterate over the indices.


Code Examples:
1. Indexing in Arrays:
In Java, you can define an array and access its elements using indices.
public class ArrayExample {
    public static void main(String[] args) {
        // Define an array
        int[] numbers = {1, 2, 3, 4, 5};
        
        // Accessing elements using indices
        System.out.println("First element: " + numbers[0]);  // Output: 1
        System.out.println("Third element: " + numbers[2]);  // Output: 3
    }
}


2. Traversal of Arrays:
To traverse through an array, you can use a loop like a for loop to access each element.
public class ArrayTraversal {
    public static void main(String[] args) {
        // Define an array
        int[] numbers = {1, 2, 3, 4, 5};
        
        // Traversing the array using a for loop
        System.out.println("Array elements:");
        for (int i = 0; i < numbers.length; i++) {
            System.out.println(numbers[i]);
        }
    }
}



Key Points:
Arrays are indexed starting from 0.
The length of an array can be accessed using array.length.
Traversing can be done using loops (like for, while, or foreach).






