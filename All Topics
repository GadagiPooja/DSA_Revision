
1. Arrays
-Basic Operations (Traversal, Insertion, Deletion)
-Sorting (Bubble Sort, Selection Sort, Insertion Sort, Merge Sort, Quick Sort, Heap Sort, Radix Sort, Counting Sort)
-Searching (Linear Search, Binary Search)
-Two Pointers Technique
-Sliding Window
-Find Duplicate/ Missing Elements
-Rotation/ Reversal Problems
-Subarrays and Subsets
-Prefix Sum/ Product Array


2. Strings
-String Matching Algorithms (Naive Search, KMP, Rabin-Karp, Boyer-Moore)
-Anagrams
-Palindrome Checking
-Substring Search
-Longest Common Substring/Subsequence
-Z-Algorithm


3. Linked Lists
-Singly Linked List (Traversal, Insert, Delete)
-Doubly Linked List
-Reversal of Linked List
-Detecting Loops (Floyd’s Cycle Detection)
-Merge Two Sorted Linked Lists
-Linked List Problems (N-th Node, Remove Duplicates)


4. Stacks
-Stack Operations (Push, Pop, Peek)
-Implementation (Array vs Linked List)
-Applications of Stacks (Balanced Parentheses, Infix to Postfix/Prefix Conversion)
-Expression Evaluation (Postfix, Prefix)
-Next Greater Element/ Previous Greater Element


5. Queues
-Queue Operations (Enqueue, Dequeue, Peek)
-Circular Queue
-Deque (Double-ended Queue)
-Priority Queue/ Min-Heap/ Max-Heap
-Applications (Scheduling, Sliding Window Problems, BFS)


6. Hashing
-Hash Tables and Hash Maps
-Collision Handling (Chaining, Open Addressing)
-Applications (Two Sum Problem, Subarray with Sum 0)
-Hashing in Graphs (Detecting Cycles, Subgraphs)


7. Trees
-Binary Trees (Traversal: Pre-order, In-order, Post-order)
-Binary Search Trees (BST) Operations (Insert, Delete, Search)
-Height of a Tree, Level-order Traversal
-AVL Trees (Self-Balancing Trees)
-Red-Black Trees
-Segment Trees, Fenwick Trees (Binary Indexed Trees)
-Binary Tree to Binary Search Tree
-Lowest Common Ancestor (LCA)
-Tree Diameter, Max Depth, Min Depth


8. Heaps (Priority Queue)
-Min-Heap and Max-Heap
-Building a Heap
-Heap Sort
-Kth Largest/ Smallest Element
-Median Maintenance (Dynamic)
-Merge K Sorted Lists
-Implementing Priority Queue


9. Graphs
-Graph Representation (Adjacency Matrix, Adjacency List)
-Graph Traversal (DFS, BFS)
-Shortest Path Algorithms (Dijkstra’s Algorithm, Bellman-Ford Algorithm)
-Topological Sorting
-Minimum Spanning Tree (Kruskal’s, Prim’s Algorithms)
-Floyd-Warshall Algorithm (All pairs shortest path)
-Bipartite Graph Check
-Cycle Detection in Directed/ Undirected Graphs
-Strongly Connected Components (Kosaraju’s Algorithm)


10. Dynamic Programming
-Basics of DP (Memoization, Tabulation)
-Fibonacci Numbers (Memoization vs Recursion)
-Longest Common Subsequence (LCS)
-Longest Increasing Subsequence (LIS)
-Knapsack Problem (0/1, Unbounded)
-Coin Change Problem
-Matrix Chain Multiplication
-Palindrome Partitioning
-Edit Distance
-Subset Sum Problem
-DP on Trees (Tree DP)
-DP for Palindromes (Longest Palindromic Subsequence)


11. Greedy Algorithms
-Activity Selection Problem
-Fractional Knapsack Problem
-Huffman Coding
-Dijkstra’s Algorithm (Greedy approach)
-Job Scheduling Problem
-Minimum Spanning Tree (Prim’s and Kruskal’s Algorithms)


12. Backtracking
-N-Queens Problem
-Subset Sum Problem
-Sudoku Solver
-Permutations and Combinations
-Hamiltonian Path/Cycle
-Rat in a Maze Problem
-Graph Coloring Problem


13. Bit Manipulation
-Basic Bitwise Operators (AND, OR, XOR, NOT)
-Counting Set Bits
-Bitmasking
-Power of Two Check
-Single Number (Find non-repeating element)
-Subset Generation using Bit Manipulation


14. Advanced Data Structures
-Trie (Prefix Tree)
-Union-Find (Disjoint Set Union) and Applications (MST, Kruskal’s)
-Suffix Arrays and Suffix Trees
-Segment Tree
-Fenwick Tree (Binary Indexed Tree)
-Skip Lists
-Van Emde Boas Tree


15. Miscellaneous Topics
-Sliding Window Algorithms
-Binary Search Variations (Search in Rotated Array, Ternary Search)
-Divide and Conquer Algorithms
-KMP (Knuth-Morris-Pratt) Algorithm
-Z Algorithm
-Top K Elements
-Median of Two Sorted Arrays
-Counting Inversions in an Array


Bonus: Interview-Specific Topics
-Problem-solving Approach (Brute Force, Optimized Solutions)
-Time and Space Complexity Analysis
-Recursion and Memoization
-Understanding Edge Cases
-Pattern Recognition (Sliding Window, Two Pointers, Greedy)
-Mock Interviews and System Design (For technical interviews)


